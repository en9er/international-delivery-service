version: '3.8'

services:
    web:
        container_name: delivery-service
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "4000:4000"
        depends_on:
            - celery_worker

        env_file:
            - .env


    db:
        image: mysql:latest
        container_name: mysql-container
        environment:
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASS: ""
            DB_NAME: ${DB_NAME}
            DB_PORT: ${DB_PORT}
            MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            interval: 10s
            timeout: 5s
            retries: 3

    redis:
        image: "redis:alpine"
        container_name: redis-container
        ports:
            - "6379:6379"
        environment:
            REDIS_HOST: ${REDIS_HOST}
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
            interval: 10s
            timeout: 5s
            retries: 3

    celery_worker:
        container_name: celery_worker
        build: .
        command: ['celery', '-A', 'app.celery_worker.celery', 'worker', '-B', '-l', 'INFO']
        environment:
            CELERY_BROKER_URL: ${CELERY_BROKER_URL}
            CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

        depends_on:
            redis:
                condition: service_healthy

    flower:
        build: ./
        command: ['celery', '-A', 'app.celery_worker.celery', 'flower']
        ports:
            - "5555:5555"
        environment:
            CELERY_BROKER_URL: ${CELERY_BROKER_URL}
            CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
        depends_on:
            - redis
            - celery_worker
volumes:
    mysql-data:
